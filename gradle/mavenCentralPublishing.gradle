apply plugin: 'maven'

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

if(project.hasProperty('sign')) {
    apply plugin: 'signing'

    signing {
        sign configurations.archives
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            if(project.hasProperty('sign')) {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            }

            def username = project.ext.has('nexusUser') ? project.ext.nexusUser : ''
            def password = project.ext.has('nexusPassword') ? project.ext.nexusPassword : ''

            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                authentication(userName: username, password: password)
            }

            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
                authentication(userName: username, password: password)
            }

            pom.project {
                name 'smartcache'

                packaging 'jar'

                description 'SmartCache - cache that can survive anything.'
                url 'https://github.com/kielo/smartcache'
                inceptionYear '2014'

                scm {
                    connection 'scm:git:git@github.com:kielo/smartcache.git'
                    developerConnection 'scm:git:git@github.com:kielo/smartcache.git'
                    url 'https://github.com/kielo/smartcache'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        name 'Adam Dubiel'
                    }
                }
            }
        }
    }
} 
